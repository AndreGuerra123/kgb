buildscript {
    ext {
        kotlinVersion = "1.2.30"
        coroutineVersion = "0.22.3"
        arrowVersion = "0.6.1"

        jUnitVersion = "5.1.0"
        spekVersion = "1.1.5"
        kluentVersion = "1.35"
    }

    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
    }

    dependencies {
    }
}

plugins {
    id "org.jetbrains.kotlin.jvm" version "1.2.30"
    id "org.jetbrains.kotlin.kapt" version "1.2.30"
    id "io.gitlab.arturbosch.detekt" version "1.0.0.RC6-3"
}

group 'org.yourcompany'
version '0.1'

apply plugin: "jacoco"
apply plugin: "application"
apply plugin: "idea"

mainClassName = "org.yourcompany.boilerplate.Application"

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
    compile "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutineVersion"

    compile "io.arrow-kt:arrow-core:$arrowVersion"
    compile "io.arrow-kt:arrow-typeclasses:$arrowVersion"
    compile "io.arrow-kt:arrow-instances:$arrowVersion"
    compile "io.arrow-kt:arrow-data:$arrowVersion"
    compile "io.arrow-kt:arrow-syntax:$arrowVersion"
    kapt "io.arrow-kt:arrow-annotations-processor:$arrowVersion"

    testCompile "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"
    testCompile "org.jetbrains.kotlin:kotlin-test:$kotlinVersion"
    testCompile "org.amshove.kluent:kluent:$kluentVersion"

    testImplementation "org.junit.jupiter:junit-jupiter-api:$jUnitVersion"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$jUnitVersion"

    testCompile("org.jetbrains.spek:spek-api:$spekVersion") {
        exclude group: 'org.jetbrains.kotlin'
    }
    testRuntime("org.jetbrains.spek:spek-junit-platform-engine:$spekVersion") {
        exclude group: 'org.jetbrains.kotlin'
    }
}

jacoco {
    toolVersion = "0.8.0"
}

detekt {
    version = "1.0.0.RC6-3"
    profile("main") {
        input = "$projectDir/src/main/kotlin"
        config = "$rootDir/detekt.yml"
        filters = ".*test.*,.*/resources/.*,.*/tmp/.*"
    }
}

test {
    finalizedBy detektCheck
    finalizedBy jacocoTestReport

    useJUnitPlatform {
        includeEngines 'spek'
    }

    testLogging {
        events "passed", "skipped", "failed"
    }
}

kotlin {
    experimental {
        coroutines "enable"
    }
}

compileKotlin {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    kotlinOptions {
        jvmTarget = "1.8"
        apiVersion = "1.2"
        languageVersion = "1.2"
        allWarningsAsErrors = true
    }
}

compileTestKotlin {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    kotlinOptions {
        jvmTarget = "1.8"
        apiVersion = "1.2"
        languageVersion = "1.2"
        allWarningsAsErrors = true
    }
}

idea {
    module {
        downloadJavadoc = true
        downloadSources = true

        sourceDirs += file('build/generated/source/kapt/main')
        testSourceDirs += file('build/generated/source/kapt/test')

        sourceDirs += file('build/generated/source/kaptKotlin/main')
        testSourceDirs += file('build/generated/source/kaptKotlin/test')

        sourceDirs += file('build/tmp/kapt/main/kotlinGenerated')
        testSourceDirs += file('build/tmp/kapt/test/kotlinGeneratedst')
    }
}

task compile(dependsOn: "testClasses")

task wrapper(type: Wrapper) {
    gradleVersion = '4.6'
}
